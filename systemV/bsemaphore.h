#ifndef BIN_SEMAPHORE_H
#define BIN_SEMAPHORE_H

#include <sys/ipc.h>
#include <sys/types.h>
#include <sys/sem.h>

#include "semaphore.h"

#ifdef __cplusplus
extern "C" {
#endif

/**
 * @brief Initial a binary-value(0/1) semaphore
 * @param key Key generated by ftok()
 * @param val Initialization value of the semaphore
 * @return The semaphore-set-id if succeeded, -1 otherwise
 * */
int bsemInit(key_t key, int val);

/**
 * @brief mutex-semaphore pass-check operation
 *      If the semaphore less than or equal to 0, sem_p() would block
 * @param semid Check on which semaphore
 * @return 0 if succeeded, -1 otherwise
 * */
int bsemP(int semid);

/**
 * @brief mutex-semaphore release operation
 *      Increse the semaphore and return immediately
 * @param semid Release on which semaphore
 * @return 0 if succeeded, -1 otherwise
 * */
int bsemV(int semid);

/**
 * @brief Remove the binary-value(0/1) semaphore
 * @param semid Semaphore set's id
 * @return 0 if successful, -1 otherwise
 */
int bsemRemove(int semid);


#ifdef __cplusplus
}
#endif

#endif /* End of header file */
